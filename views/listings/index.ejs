<% layout("layouts/boilerplate") %>

<style>
  #filters {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    
    
  }

  .filter {
    text-align: center;
    margin-right: 1.5rem;
    margin-top: 2rem;
    opacity: 0.7;
    transition: opacity 0.3s;
  }

  .filter:hover {
    opacity: 1;
    cursor: pointer;
  }

  .filter p {
    font-size: 0.8rem;
    margin: 0.5rem 0 0;
  }

  .tax-info {
    display: none;
  }

  .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    height: 3rem;
    padding: 0 1rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
  }

  .scrollable-tabs-container {
    display: flex;
    align-items: center;
    overflow-x: auto;
    margin-right: 1rem;
  }

  .scrollable-tabs-container::-webkit-scrollbar {
    display: none;
  }

  .left-arrow,
  .right-arrow {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    padding: 0 1rem;
    cursor: pointer;
    align-items: center;
  }

  .left-arrow:hover,
  .right-arrow:hover {
    opacity: 0.8;
  }

  .left-arrow svg,
  .right-arrow svg {
    width: 1.5rem;
    height: 1.5rem;
    
    border-radius: 25rem;
    border-width: 0.5px;
    background-color: rgba(196, 193, 193, 0.219);
  }

  .filter-container {
    display: flex;
    flex: 1;
    align-items: center;
    overflow-x: auto;
    scroll-behavior: smooth;
  }

  .listing-link {
    text-decoration: none;
  }

  .listing-card {
    transition: transform 0.2s;
  }

  .listing-card:hover {
    transform: scale(1.02);
  }

  /* Responsive adjustments */


@media (min-width: 1350px) {
  #filters {
    flex-wrap: nowrap;
  }

  .tax-toggle {
    margin-left: auto;
  }
}
</style>

<div id="filters">
  <div class="scrollable-tabs-container">
    <div class="left-arrow">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M15.75 19.5 8.25 12l7.5-7.5"
        />
      </svg>
    </div>
    <div class="filter-container">
      <div class="filter">
        <div>
          <i class="fa-solid fa-fire"></i>
        </div>
        <p>Trending</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-bed"></i>
        </div>
        <p>Rooms</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-mountain-city"></i>
        </div>
        <p>Cities</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-mountain"></i>
        </div>
        <p>Mountains</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-brands fa-fort-awesome"></i>
        </div>
        <p>Castles</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-person-swimming"></i>
        </div>
        <p>Pools</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-campground"></i>
        </div>
        <p>Camping</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-cow"></i>
        </div>
        <p>Farms</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-regular fa-snowflake"></i>
        </div>
        <p>Arctic</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-igloo"></i>
        </div>
        <p>Domes</p>
      </div>
      <div class="filter">
        <div>
          <i class="fa-solid fa-sailboat"></i>
        </div>
        <p>Boats</p>
      </div>
    </div>
    <div class="right-arrow active">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M8.25 4.5l7.5 7.5-7.5 7.5"
        />
      </svg>
    </div>
  </div>
  <div class="tax-toggle">
    <div class="form-check-reverse form-switch ">
      <input
        class="form-check-input"
        type="checkbox"
        role="switch"
        id="flexSwitchCheckDefault"
      />
      <label class="form-check-label text-center" for="flexSwitchCheckDefault"
        >Display prices post taxes</label
      >
    </div>
  </div>
</div>

<div class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3">
  <% for(let listing of allListings) { %>
  <a href="/listings/<%= listing._id %>" class="listing-link">
    <div class="card col listing-card">
      <img
        src="<%= listing.image.url %>"
        class="card-img-top"
        alt="listing_image"
        style="height: 20rem"
      />
      <div class="card-img-overlay"></div>
      <div class="card-body">
        <p class="card-text">
          <b><%= listing.title %> </b><br />
          <span class="price-info" data-base-price="<%= listing.price %>">
            &#8377; <%= listing.price.toLocaleString("en-IN") %> /night
          </span>
          <!-- <i class="tax-info"> &nbsp; &nbsp;+18% GST</i> -->
        </p>
      </div>
    </div>
  </a>
  <% } %>
</div>

<script>
  document.querySelector(".left-arrow").addEventListener("click", () => {
    document.querySelector(".filter-container").scrollBy({ left: -150, behavior: "smooth" });
  });

  document.querySelector(".right-arrow").addEventListener("click", () => {
    document.querySelector(".filter-container").scrollBy({ left: 150, behavior: "smooth" });
  });
  let taxSwitch = document.getElementById("flexSwitchCheckDefault");

taxSwitch.addEventListener("change", () => {
  updatePriceDisplay(taxSwitch.checked);
});
  function updatePriceDisplay(isTaxSwitchOn) {
  let priceInfoElements = document.querySelectorAll(".price-info");

  priceInfoElements.forEach((priceInfo) => {
    const basePrice = parseFloat(priceInfo.dataset.basePrice);
    const totalPrice = isTaxSwitchOn ? calculateTotalPrice(basePrice) : basePrice;

    priceInfo.innerHTML = `&#8377; ${totalPrice.toLocaleString("en-IN")} /night`;

    if (isTaxSwitchOn) {
      priceInfo.innerHTML += ` <i class="tax"> &nbsp;with 18% GST</i>`;
    }
  });
}
// Function to calculate total price with GST
function calculateTotalPrice(basePrice) {
  const gstPercentage = 18;
  const gstAmount = (basePrice * gstPercentage) / 100;
  const totalPrice = basePrice + gstAmount;
  return totalPrice.toLocaleString("en-IN");
}
</script>
